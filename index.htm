<!DOCTYPE html>
<html>
  <head>
    <title>How we built DevTube</title>
    <meta charset="utf-8">
    <style>
      @import url(https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz);
      @import url(https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic);
      @import url(https://fonts.googleapis.com/css?family=Ubuntu+Mono:400,700,400italic);
      body, .remark-slide-content { 
          color: white;
          font-family: 'Droid Serif'; 
          background-color: black !important;
      }

      .invert {
        background-color: white !important;
        color: black;
      }

      .es {
        color: black;
        background-color: #f7df1e !important;
      }

      .remark-slide-scaler { -webkit-box-shadow: 0 !important; box-shadow: none !important; }
      
      h1, h2, h3 {
        font-family: 'Yanone Kaffeesatz';
        font-weight: normal;
      }
      .strike {
        text-decoration: line-through
      }
      h1 strong {
          background-color: #2980b9;
          padding: 0.2em;
      }
      .remark-code, .remark-inline-code { font-family: 'Ubuntu Mono'; }
    </style>
  </head>
  <body>
    <textarea id="source">

class: center, middle

# HOW WE BUILT **DEV.TUBE**

---
class: center, middle
# ?

---
background-image:url(cats.png)
background-size: contain
???
Well, it's actually more...

---
### - Open source (github.com/watch-devtube)

--

### - Channel curation via GitHub (github.com/watch-devtube/contrib)

--

### - All data is mutable 

--

### - No marketing videos

--

### - Better ranking (bit.ly/how_we_rank)

--

### - Better UX and search (thanks to community)

---
class: center, middle
# **1 000 000** views

---
background-image:url(domain.png)
background-size: contain

---
background-image:url(eduards_spain.jpg)
background-size: contain

---
background-image:url(andrey.jpg)
background-size: contain

---
class: center, middle
# .strike[MVP] BVP in June
## Barely Viable Product
???
- it tooks us 2 months
- far from perfect
- wanted to develop longer, but...

---
background-image: url(spike.png)
background-size: contain

---
background-image: url(henrik.png)
background-size: contain

---
background-image: url(hackernews.png)
background-size: contain

---
background-image: url(producthunt.png)
background-size: contain
???
- habrahabr
- popular magazines

---
background-image: url(twitter.png)
background-size: contain

---
class: invert
background-image: url(vue.png)
background-size: contain
???
- simple, easy to understand, easy to start with
- routing and state management

---
class: es, center, middle
# ES6 with Babel

---
class: invert
background-image: url(bulma.png)
background-size: contain
???
- no javascript
- super nice

---
class: invert
background-image: url(algolia.png)
background-size: contain

---
### @eduardsi: We are facing extremely high load. Please provide us with 5M free records!

--

### @algolia: We won't be able to give you 5M operations for free. The 300k operations you have is already more than what we usually give for open-source. I'll bump it to 400k so you can enjoy your Hacker News ride, but I won't be able to do much more unfortunately. What I can do though is to hook you up with our sales team if you'd like. 

--

### @eduardsi: Thanks! Please send us the quote.

--

# no reply up to now

---
class: center, middle
background-image: url(instasearch.png)
background-size: contain
# **Vendor-lock in**
???
equipped with hunders of feature toggles, we started migration to...

---
class: center, middle, invert
background-image: url(fastr.jpg)
background-size: contain
???
why have we decided to write our own? Well, we were not ready to pay Algolia's price, 
we wanted to stay serverless, even though our discussions almost led to go for a server.
after all Fastr was an experiment, which worked in the end.

---
class: center, middle, invert
# Lunr.js + Loki.js 
???
Of course, we didn't write our own storage engine, we used good libraries with strong communities behind them.
Lunr is a full text search engine, that is Solr/Lucene/ElasticSearch, but way simpler, of course.
We sacrificed some of the search features for size and maintainbilty.
Therefore we also needed a bit of aid to implement additional aggregation queries and we used in-memory collections from Loki.js.
So, basically, Fastr is a combination of those 2 libraries.

---
class: center, middle
# Code + Fastr = 1.8GB of RAM 
???
That holds 56K videos to date. Why are those 1.8GB important, becuase ... [next slide]

---
class: center, middle, invert
# Look ma, no servers!
???
That amount of data fits into a Lambda function! So, yes, all data is deployed together with the code. In a single function.

---
class: center, middle, invert
background-image: url(gcf.png)
background-size: contain
???
When we started in April, GCF was still beta, even though, quite usable.
GCF reached GA only in July, 2018 

---
class: center, middle
# Why not AWS?
???
We had experience with AWS before and it would seem that we should have chosen that.
GCF provides a more transparent and simpler programming model. You can pretty much run full Express application as a function.
Of course, you can achieve similar things with ElasticBeansTalk, but again the pricing is quite different from what Google Cloud Functions offer at the moment.
(The only feature, that I miss from AWS is cron-invoked functions.)
Complexity of AWS and its architecture put us off.

---
class: center, middle, invert
# Seriously, no servers?
???
Well, ok, there is one. And again the decision to use that was based on the pricing.

---
class: center, middle, invert
background-image: url(nginx.png)
background-size: contain
???
Running on f1-micro instance, which has less memory than Rasspberry Pi and only one CPU.
And you know what? It is hardly doing anything. Seriously, it's not busy at all, even when we have hug traffic.

---
class: center, middle
# Any other issues?

---
class: center, middle
background-image: url(ice.jpg)
background-size: contain
# **Cold starts**
???
One problem that anyone has with Lambda/Cloud functions is cold starts.
And with Fastr deserializing the index into memory, it could be that cold start takes around 5-10 seconds.
So, we leveraged the use of CDN for static resources. In the future we also want to 
Also, you can notice a nice message and a progress bar to show that site is alive and just loading your data.

---
class: center, middle
background-image: url(blue_green.jpg)
background-size: contain
# Blue/green  
???
Another issue we faced with GCF is that a freshly deployed function is not immediately available. 
Actually, that's where AWS wins so far. So, we had to implement a blue/green deployment approach. 
So, basicaly we have 2 versions of the same function deployed. During deployment when we are sure that function is up and running and responds in timely manner, 
then we switch the toggle in NGINX to serve different function.

---
class: center, middle
background-image: url(money.jpg)
background-size: contain
# **How much does it cost?**
???
- burn rate 20$
- 300$ from Google
- dev time, but have amazing contributors, including famous IT peeps. See â€“

---
background-image: url(leaderboard.png)
background-size: contain
???
Hope you'll join in, so we can make the best tech video hub together!

---

class: center, middle
# Thank you!
### @codingandrey @eduardsi

    </textarea>
    <script src="https://remarkjs.com/downloads/remark-latest.min.js">
    </script>
    <script>
      var slideshow = remark.create({
        ratio: '16:9',
        slideNumberFormat: function (current, total) {
            return ''
        }        
      });
    </script>
  </body>
</html>